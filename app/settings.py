"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import logging
import os
from pathlib import Path

from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(BASE_DIR / '.env')

# SECURITY WARNING: don't run with debug turned on in production!
try:
    DEBUG = bool(int(os.getenv('DEBUG', '0')))
except ValueError:
    DEBUG = False

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'none_secret_key')

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', 'localhost').split(' ')

# Время жизни сессии в секундах
SESSION_COOKIE_AGE = 60 * 60

# Максимальное количество попыток входа в приложение
# Не более 10-ти
MAX_NUMBER_OF_LOGIN_ATTEMPTS = 3
# Время в минутах, на которое блокируется возможность авторизации пользователя
BLOCK_LOGIN_IN_MINUTES_AFTER_FAILED_ATTEMPTS = 30

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    # Django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party apps
    'rest_framework',
    'rest_framework.authtoken',

    # My apps
    'api.apps.ApiConfig',
    'authapp.apps.AuthappConfig',
    'statisticapp.apps.StatisticappConfig',
    'metricsapp.apps.MetricsappConfig',
    'mainapp.apps.MainappConfig',
    'searchapp.apps.SearchappConfig',
    'docx_generator.apps.DocxGeneratorConfig',

    # ------------------------- Реестры программы
    'registry_lrp.apps.RegistryLrpConfig',
    'registry_lrp_dop.apps.RegistryLrpDopConfig',
    'registry_id.apps.RegistryIdConfig',
    'registry_zp.apps.RegistryZpConfig',
    'registry_br.apps.RegistryBrConfig',
    'registry_rtn_ts.apps.RegistryRtnTsConfig',
    'registry_state_support.apps.RegistryStateSupportConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.RemoteUserMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'mainapp.allowed_apps_middleware.AllowedAppsMiddleware',
]

REST_FRAMEWORK = {
    # 'DEFAULT_RENDERER_CLASSES': [
    #     'rest_framework.renderers.JSONRenderer',
    # ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}

AUTHENTICATION_BACKENDS = [
    'app.my_backend.AppRemoteUserBackend',
    'django.contrib.auth.backends.ModelBackend',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'mainapp.context_processors.link_context_processor',
                'mainapp.context_processors.parse_process_context_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': os.getenv('DB_ENGINE'),
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Asia/Yekaterinburg'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

#  Папки со статикой приложений
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'authapp/static'),
    os.path.join(BASE_DIR, 'mainapp/static'),
    os.path.join(BASE_DIR, 'statisticapp/static'),
]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'authapp.AppExtendedUser'

LOGIN_URL = '/auth/login/'

DATA_DIR = os.path.join(BASE_DIR, 'data')
BACKUP_FOLDER = os.path.join(DATA_DIR, 'backup_folder')

# Настройки путей для папок генерации выписок и отчетов DOCX-файлов
# Папка с набором шаблонов
DOCX_TEMPLATE_FOLDER_PATH = os.path.join(BASE_DIR, r'docx_generator\docx_templates')
# Папка для сгенерированных файлов
DOCX_OUTPUT_FOLDER_PATH = os.path.join(BASE_DIR, r'data\backup_folder\docx_extract_files')

# --------------  Общие настройки логирования
# Общая кодировка логирования
COMMON_ENCODING = 'utf-8'
